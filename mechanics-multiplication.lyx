#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass extbook
\begin_preamble
\input $HOME/Documents/scsu/Book-Linear/preamble
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 1.9cm
\rightmargin 1.5cm
\bottommargin 1.9cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Matrix-Multiplication"

\end_inset

Matrix Multiplication
\end_layout

\begin_layout Standard
Matrix addition, matrix subtraction and scalar multiplication are each done
 component-wise, something many people find natural.
 Even those for whom it does not come naturally rarely question why the
 operations are done the way they are.
 After explanation, they are acceptable.
 Devoid of context, however, there is nothing natural or intuitive about
 matrix multiplication.
 It's not difficult.
 It just takes some getting used to.
 The purpose of the current section is to start the process of familiarization.
 The reason multiplication is done the way it is will not come up for a
 little while yet.
 In the meantime, a little patience and concentration will be enough.
\end_layout

\begin_layout Standard
If you can master the product of a 
\series bold
row matrix
\series default
 (a 
\begin_inset Formula $1\times n$
\end_inset

 matrix) with a 
\series bold
column matrix
\series default
 (an 
\begin_inset Formula $m\times1$
\end_inset

 matrix), you can master the product of any two matrices.
 The following example illustrates the process.
 
\begin_inset Formula 
\begin{equation}
\left[\begin{array}{ccc}
1 & 2 & 3\end{array}\right]\left[\begin{array}{c}
4\\
5\\
6
\end{array}\right]=\left[\begin{array}{c}
1\cdot4+2\cdot5+3\cdot6\end{array}\right]=\left[\begin{array}{c}
32\end{array}\right]\label{eq:matrix_product_illustration}
\end{equation}

\end_inset

Given a row matrix 
\begin_inset Formula $R$
\end_inset

 and a column matrix 
\begin_inset Formula $C$
\end_inset

 with the same number of entries, say 
\begin_inset Formula $n$
\end_inset

, their product is the sum of the products of corresponding entries.
 That is, 
\begin_inset Formula 
\[
RC=\left[\begin{array}{c}
r_{1,1}c_{1,1}+r_{1,2}c_{2,1}+\cdots+r_{1,n}c_{n,1}\end{array}\right].
\]

\end_inset

The first entry of 
\begin_inset Formula $R$
\end_inset

 (reading from left to right) corresponds with the first entry of 
\begin_inset Formula $C$
\end_inset

 (reading from top to bottom).
 The second entry of 
\begin_inset Formula $R$
\end_inset

 corresponds with the second entry of 
\begin_inset Formula $C$
\end_inset

, and so on.
 The product of the two matrices is the sum of these entry products.
 As with addition, multiplication is an operator, so the product of two
 matrices is a matrix.
 In this case, a 
\begin_inset Formula $1\times1$
\end_inset

 matrix, as shown in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:matrix_product_illustration"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 If 
\begin_inset Formula $R$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

 differ in length the product 
\begin_inset Formula $RC$
\end_inset

 is undefined.
\end_layout

\begin_layout Standard
For matrices with multiple rows and columns, this row-matrix-column-matrix
 calculation is repeated for each entry of their product.
 The 
\begin_inset Formula $i,\!j$
\end_inset

-entry of 
\begin_inset Formula $AB$
\end_inset

 is the single entry of the product of the 
\begin_inset Formula $i^{th}$
\end_inset

 row of 
\begin_inset Formula $A$
\end_inset

 with the 
\begin_inset Formula $j^{th}$
\end_inset

 column of 
\begin_inset Formula $B$
\end_inset

 (where this makes sense).
 That is, if 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 are matrices, then the product 
\begin_inset Formula $AB$
\end_inset

 is calculated by setting 
\begin_inset Formula $(AB)_{i,j}$
\end_inset

 equal to the lone entry of 
\begin_inset Formula $A_{i,:}B_{:,j}$
\end_inset

 (where this makes sense).
 Several conclusions can be drawn from this description.
\end_layout

\begin_layout Itemize
The rows of 
\begin_inset Formula $A$
\end_inset

 and the columns of 
\begin_inset Formula $B$
\end_inset

 must all have the same length (number of entries).
 Otherwise 
\begin_inset Formula $A_{i,:}B_{:,j}$
\end_inset

, is undefined.
\end_layout

\begin_layout Itemize
\begin_inset Formula $P$
\end_inset

 has the same number of rows as 
\begin_inset Formula $A$
\end_inset

 (
\begin_inset Formula $P$
\end_inset

 and 
\begin_inset Formula $A$
\end_inset

 have the same height).
\end_layout

\begin_layout Itemize
\begin_inset Formula $P$
\end_inset

 has the same number of columns as 
\begin_inset Formula $B$
\end_inset

 (
\begin_inset Formula $P$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 have the same width).
\end_layout

\begin_layout Standard
These last two observations suggest an organizational technique for multiplicati
on.
 Writing 
\begin_inset Formula $B$
\end_inset

 to the right of 
\begin_inset Formula $A$
\end_inset

 and just below leaves a space above 
\begin_inset Formula $B$
\end_inset

 and to the right of 
\begin_inset Formula $A$
\end_inset

 that's exactly the right size for the product 
\begin_inset Formula $AB$
\end_inset

.
 Plus, the row needed for calculating 
\begin_inset Formula $(AB)_{i,j}$
\end_inset

 is directly left of it and the column needed for calculating 
\begin_inset Formula $(AB)_{i,j}$
\end_inset

 is directly below it.
 See figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:multiplication_visual"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:multiplication_visual"

\end_inset


\begin_inset Formula $(AB)_{2,4}=P_{2,4}=A_{2,1}B_{1,4}+A_{2,2}B_{2,4}$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/mechanics-multiplication-visual.pdf
	scale 40

\end_inset


\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection
Transposition and the Dot Product
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $A$
\end_inset

 is a matrix, then its transpose is the matrix resulting from turning the
 rows of 
\begin_inset Formula $A$
\end_inset

 into columns.
 The first row of the matrix becomes the first column of the transpose.
 The second row of the matrix becomes the second column of the transpose,
 and so on.
 Equivalently, the transpose of a matrix 
\begin_inset Formula $A$
\end_inset

 is the matrix resulting from turning the columns of 
\begin_inset Formula $A$
\end_inset

 into rows.
 The first column of the matrix becomes the first row of the transpose.
 The second column of the matrix becomes the second row of the transpose,
 and so on.
 Can you see why turning rows into columns and turning columns into rows
 are equivalent?
\end_layout

\begin_layout Standard
If a matrix has only one row (is a row matrix) then its transpose has one
 column (is a column matrix), and vice versa.
 Using a superscript 
\begin_inset Formula $T$
\end_inset

 for transpose the row-matrix-column-matrix product from the beginning of
 this section can be written
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\left[\begin{array}{ccc}
1 & 2 & 3\end{array}\right]\left[\begin{array}{c}
4\\
5\\
6
\end{array}\right]=\left[\begin{array}{c}
1\\
2\\
3
\end{array}\right]^{T}\left[\begin{array}{c}
4\\
5\\
6
\end{array}\right]=\left[\begin{array}{c}
1\cdot4+2\cdot5+3\cdot6\end{array}\right]=\left[\begin{array}{c}
32\end{array}\right]\label{eq:matrix_dot_product}
\end{equation}

\end_inset

Writing this way may help you keep track of which numbers should be multiplied
 by which since they are side by side in the expression using the transpose.
 Combining this observation with the organizational technique of figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:multiplication_visual"
plural "false"
caps "false"
noprefix "false"

\end_inset

, computing the product 
\begin_inset Formula 
\[
\left[\begin{array}{ccc}
1 & -2 & 4\\
5 & 3 & 6
\end{array}\right]\left[\begin{array}{cccc}
-2 & 0 & 9 & 3\\
8 & 14 & 2 & 8\\
1 & -1 & 7 & 5
\end{array}\right]
\]

\end_inset

 might look like the following on paper (at least to start).
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/mechanics-multiplication-onpaper.jpg
	lyxscale 35

\end_inset


\end_layout

\begin_layout Standard
\noindent
For example, the 
\begin_inset Formula $-32$
\end_inset

, 
\begin_inset Formula $P_{1,2}$
\end_inset

, is calculated by taking the row directly to its left, 
\begin_inset Formula $\left[\begin{array}{ccc}
1 & -2 & 4\end{array}\right]$
\end_inset

, and multiplying by the column directly below it, 
\begin_inset Formula $\left[\begin{array}{c}
0\\
14\\
-1
\end{array}\right]$
\end_inset

.
 This product is calculated to the right of the matrices and is just one
 of the 8 entries of the product.
 It looks like a lot of work, and it is! Not to worry, though.
 With some practice, you will become proficient and not have to write down
 all the individual row-matrix-column-matrix products in such detail.
 In fact, it will be very important that you acquire such proficiency.
 This row-matrix-column-matrix calculation sits at the core of linear algebra
 and its connection to various sciences.
 If you have seen the dot product, a very similar calculation, in physics
 or calculus, think of the row-matrix-column-matrix product as the linear
 algebra equivalent of the dot product.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="right" valignment="top" width="5cm">
<column alignment="left" valignment="top">
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
In physics or calculus (
\series bold
vectors
\series default
):
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\langle5,3,6\rangle\cdot\langle0,14,-1\rangle=5\cdot0+3\cdot14+6\cdot-1=36$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
In linear algebra (matrices):
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula ${\displaystyle \left[\begin{array}{c}
5\\
3\\
6
\end{array}\right]^{T}\left[\begin{array}{c}
0\\
14\\
-1
\end{array}\right]=5\cdot0+3\cdot14+6\cdot-1=36}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent
It's the same calculation! There are enough similarities between column
 matrices and vectors that we often use column matrix notation to represent
 vectors and call them 
\series bold
column vectors
\series default
 or just vectors.
\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{digression}{Row Vector}
\end_layout

\end_inset

A row matrix is sometimes referred to as a 
\series bold
row vector
\series default
, in which case it represents a 
\series bold
vector
\series default
 just like those in physics or calculus.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{digression}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
Thus the distinction between the two objects is blurred, but make no mistake,
 a column matrix is a matrix, and a vector is a vector.
 They are not the same thing.
 It is a convenience in linear algebra to represent vectors as column matrices,
 giving the column matrix notation two meanings, (1) a matrix, and (2) a
 vector.
 Though we try not to do this type of thing in mathematics often, it happens
 sometimes, much like the numerous words in English with multiple meanings.
 What you can do with a ring depends entirely on what type of ring.
 A wedding ring might be worn on your ring finger, and a circus ring might
 contain a tiny car with two dozen clowns in it.
 Certainly not the other way around!
\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{digression}{Ring}
\end_layout

\end_inset

In mathematics, a ring is a set together with two binary operators that
 satisfy a number of properties.
 This is something you will study in abstract algebra.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{digression}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\noindent
Analogously, what you can do with a one-column array of numbers depends
 entirely on what it represents.
 If it represents a matrix, it might be transposed or used in the solution
 of a sytem of linear equations.
 If it represents a vector it might be used in the dot product with another
 vector or plotted in the Cartesian coordinate system.
\end_layout

\begin_layout Standard
Notice the product in equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:matrix_dot_product"
plural "false"
caps "false"
noprefix "false"

\end_inset

) is written as a 
\begin_inset Formula $1\times1$
\end_inset

 matrix, but the same type of matrix product is written as a scalar in the
 pencil-and-paper calculation of a matrix product.
 This is another example of a single notation having multiple interpretations,
 indicated through context.
 There is no context for equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:matrix_dot_product"
plural "false"
caps "false"
noprefix "false"

\end_inset

), so the product is rightfully a matrix.
 In the calculation of a matrix product, the result of each individual dot
 product will become an entry—a scalar—not a matrix in the resulting matrix.
 The square brackets are dropped.
 The 
\begin_inset Formula $1\times1$
\end_inset

 matrix is treated as if it were a scalar.
 In fact, 
\begin_inset Formula $1\times1$
\end_inset

 matrices and scalars are often used interchangeably, jeopardizing the distincti
on between these two objects.
 Again, make no mistake, a 
\begin_inset Formula $1\times1$
\end_inset

 matrix is a matrix, and a scalar is not a matrix at all.
 They are different things.
 It is a convenience to let 
\begin_inset Formula $1\times1$
\end_inset

 matrix notation (square brackets) and scalar notation (lack of delimiters)
 each represent both objects, whichever is appropriate for the situation.
\end_layout

\begin_layout Standard
Compute the products.
\begin_inset Formula 
\[
\left[\begin{array}{cc}
1 & -2\\
3 & 7
\end{array}\right]\left[\begin{array}{cc}
2 & 3\\
-1 & 0
\end{array}\right]\qquad\left[\begin{array}{cc}
2 & 3\\
-1 & 0
\end{array}\right]\left[\begin{array}{cc}
1 & -2\\
3 & 7
\end{array}\right]
\]

\end_inset

Besides good practice in multiplying matrices, this example shows that 
\begin_inset Formula 
\[
\left[\begin{array}{cc}
1 & -2\\
3 & 7
\end{array}\right]\left[\begin{array}{cc}
2 & 3\\
-1 & 0
\end{array}\right]\neq\left[\begin{array}{cc}
2 & 3\\
-1 & 0
\end{array}\right]\left[\begin{array}{cc}
1 & -2\\
3 & 7
\end{array}\right],
\]

\end_inset

and more importantly, therefore 
\series bold
\shape italic
matrix multiplication is not commutative
\series default
\shape default
.
 Given matrices 
\begin_inset Formula $M$
\end_inset

 and 
\begin_inset Formula $N$
\end_inset

, we cannot expect 
\begin_inset Formula $MN$
\end_inset

 and 
\begin_inset Formula $NM$
\end_inset

 to be equal even when both products are defined.
\end_layout

\begin_layout Subsection
SageMath
\end_layout

\begin_layout Standard
If 
\family typewriter
M
\family default
 is a matrix in SageMath, then 
\family typewriter
M.transpose()
\family default
 is its transpose.
 The following code defines the matrix 
\begin_inset Formula $A=\left[\begin{array}{ccc}
1 & 2 & 3\\
4 & 5 & 6
\end{array}\right]$
\end_inset

, extracts columns 2 and 3 as column matrices, and finds the (matrix) product
 
\begin_inset Formula $A_{:,2}^{T}A_{:,3}$
\end_inset

.
\end_layout

\begin_layout LyX-Code
A=matrix(2,3,[1,2,3,4,5,6])
\end_layout

\begin_layout LyX-Code
print("Matrix A:")
\end_layout

\begin_layout LyX-Code
print(A)
\end_layout

\begin_layout LyX-Code
print()
\end_layout

\begin_layout LyX-Code
print("Treating columns 2 and 3 as matrices:")
\end_layout

\begin_layout LyX-Code
print()
\end_layout

\begin_layout LyX-Code
c2 = matrix(2,1,A.column(1))
\end_layout

\begin_layout LyX-Code
c3 = matrix(2,1,A.column(2))
\end_layout

\begin_layout LyX-Code
print("column 2:")
\end_layout

\begin_layout LyX-Code
print(c2)
\end_layout

\begin_layout LyX-Code
print()
\end_layout

\begin_layout LyX-Code
print("column 3:")
\end_layout

\begin_layout LyX-Code
print(c3)
\end_layout

\begin_layout LyX-Code
print()
\end_layout

\begin_layout LyX-Code
print("column 2 transpose times column 3:")
\end_layout

\begin_layout LyX-Code
print(c2.transpose()*c3)
\end_layout

\begin_layout Standard
The output of this code is
\end_layout

\begin_layout LyX-Code
Matrix A:
\end_layout

\begin_layout LyX-Code
[1 2 3]
\end_layout

\begin_layout LyX-Code
[4 5 6]
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
Treating columns 2 and 3 as matrices:
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
column 2:
\end_layout

\begin_layout LyX-Code
[2]
\end_layout

\begin_layout LyX-Code
[5]
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
column 3:
\end_layout

\begin_layout LyX-Code
[3]
\end_layout

\begin_layout LyX-Code
[6]
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
column 2 transpose times column 3:
\end_layout

\begin_layout LyX-Code
[36]
\end_layout

\begin_layout Standard
Notice the columns are displayed as column matrices, and the product is
 also displayed as a matrix, using the square brackets.
 The 
\family typewriter
.column()
\family default
 method extracts a column of a matrix as a vector, however, which is why
 the definitions of 
\family typewriter
c2
\family default
 and 
\family typewriter
c3
\family default
 explicitly take each column and feed them to the 
\family typewriter
matrix()
\family default
 function.
\end_layout

\begin_layout Standard
On the other hand, SageMath is perfectly capable of treating the columns
 as vectors, as seen in the following code.
 The 
\family typewriter
.dot_product()
\family default
 method is used to compute the dot product of two vectors.
\end_layout

\begin_layout LyX-Code
A=matrix(2,3,[1,2,3,4,5,6])
\end_layout

\begin_layout LyX-Code
print("Matrix A:")
\end_layout

\begin_layout LyX-Code
print(A)
\end_layout

\begin_layout LyX-Code
print()
\end_layout

\begin_layout LyX-Code
print("Treating columns 2 and 3 as vectors:")
\end_layout

\begin_layout LyX-Code
print()
\end_layout

\begin_layout LyX-Code
c2 = A.column(1)
\end_layout

\begin_layout LyX-Code
c3 = A.column(2)
\end_layout

\begin_layout LyX-Code
print("column 2:")
\end_layout

\begin_layout LyX-Code
print(c2)
\end_layout

\begin_layout LyX-Code
print()
\end_layout

\begin_layout LyX-Code
print("column 3:")
\end_layout

\begin_layout LyX-Code
print(c3)
\end_layout

\begin_layout LyX-Code
print()
\end_layout

\begin_layout LyX-Code
print("Dot product of columns 2 and 3:")
\end_layout

\begin_layout LyX-Code
print(c2.dot_product(c3)) 
\end_layout

\begin_layout Standard
The output of this code is
\end_layout

\begin_layout LyX-Code
Treating columns 2 and 3 as vectors:
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
column 2:
\end_layout

\begin_layout LyX-Code
(2, 5)
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
column 3:
\end_layout

\begin_layout LyX-Code
(3, 6)
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
Dot product of columns 2 and 3:
\end_layout

\begin_layout LyX-Code
36
\end_layout

\begin_layout Standard
Notice the notation for a vector (parentheses around a comma-separated list
 of entries), making it clear SageMath is interpreting the columns as vectors,
 not matrices.
 Also notice the dot product is displayed (and indeed interpreted) as a
 scalar, not a matrix.
\end_layout

\begin_layout Subsection
Key Concepts
\end_layout

\begin_layout Description
column
\begin_inset space ~
\end_inset

vector A vector represented as a column matrix.
\end_layout

\begin_layout Description
matrix
\begin_inset space ~
\end_inset

multiplication 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
For any matrices 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

, if the rows of 
\begin_inset Formula $A$
\end_inset

 and the columns of 
\begin_inset Formula $B$
\end_inset

 have the same number of entries, then the product 
\begin_inset Formula $AB$
\end_inset

 is defined.
 Moreover, 
\begin_inset Formula $AB$
\end_inset

 has the same number of rows (height) as 
\begin_inset Formula $A$
\end_inset

 and the same number of columns (width) as 
\begin_inset Formula $B$
\end_inset

, and 
\begin_inset Formula $(AB)_{i,j}$
\end_inset

 equals the lone entry of 
\begin_inset Formula $A_{i,:}B_{:,j}$
\end_inset

 for all entries 
\begin_inset Formula $(AB)_{i,j}$
\end_inset

 of 
\begin_inset Formula $AB$
\end_inset

.
 If the rows of 
\begin_inset Formula $A$
\end_inset

 and columns of 
\begin_inset Formula $B$
\end_inset

 do not have the same number of entries, then 
\begin_inset Formula $AB$
\end_inset

 is undefined.
\end_layout

\begin_layout Description
transpose For any 
\begin_inset Formula $m\times n$
\end_inset

 matrix 
\begin_inset Formula $A$
\end_inset

, the transpose of 
\begin_inset Formula $A$
\end_inset

, denoted 
\begin_inset Formula $A^{T}$
\end_inset

, is defined as the 
\begin_inset Formula $n\times m$
\end_inset

 matrix with 
\begin_inset Formula $(A^{T})_{i,j}=a_{j,i}$
\end_inset

 for each entry 
\begin_inset Formula $a_{j,i}$
\end_inset

 of 
\begin_inset Formula $A$
\end_inset

.
\end_layout

\begin_layout Description
vector A quantity with both magnitude and direction.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
startexercises 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Exercises
\end_layout

\begin_layout Enumerate
Multiply if possible.
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{ccc}
3 & 1 & 0\end{array}\right]\left[\begin{array}{c}
2\\
5\\
7
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{cc}
7 & 6\end{array}\right]\left[\begin{array}{c}
4\\
-5
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{ccc}
-1 & 0 & -3\end{array}\right]\left[\begin{array}{c}
6\\
-2\\
5
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{c}
2\\
-2\\
2
\end{array}\right]\left[\begin{array}{c}
4\\
2\\
3
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{cc}
-3 & 2\end{array}\right]\left[\begin{array}{c}
7\\
-1
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{c}
6.3\\
4.1\\
3.4
\end{array}\right]\left[\begin{array}{cc}
2.3 & 4.5\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{cc}
5.8 & 0.2\end{array}\right]\left[\begin{array}{c}
2.5\\
3.8
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{ccc}
-3 & 3 & 4\end{array}\right]\left[\begin{array}{c}
-1\\
5
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{c}
7\\
-2
\end{array}\right]\left[\begin{array}{cc}
-2 & 0\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{cccc}
7 & 0 & 4 & 6\end{array}\right]\left[\begin{array}{c}
-2\\
7\\
1\\
3
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{ccc}
1.35 & 4.58 & 7.36\end{array}\right]\left[\begin{array}{ccc}
3.36 & -0.25 & 1.6\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{c}
4\\
-1
\end{array}\right]\left[\begin{array}{cccc}
5 & 1 & 4 & 6\end{array}\right]$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Multiply if possible.
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{cc}
3 & 0\\
-2 & 2
\end{array}\right]\left[\begin{array}{cc}
2 & 7\\
6 & 3
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{cc}
0.03 & -0.6\\
4.25 & 5.09
\end{array}\right]\left[\begin{array}{c}
-0.3\\
4.6
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{ccc}
1 & 9 & 10\\
3 & 0 & 8\\
3 & 8 & 10
\end{array}\right]\left[\begin{array}{cc}
8 & 4\\
10 & 10\\
9 & 5\\
3 & 8
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{ccc}
-3 & 0 & 1\\
2 & 5 & 7
\end{array}\right]\left[\begin{array}{c}
1\\
3\\
4
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{cc}
2 & 3\\
2 & 3
\end{array}\right]\left[\begin{array}{cc}
1 & 0\\
3 & 2
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{ccc}
6 & 7 & 4\\
-3 & 0 & 7
\end{array}\right]\left[\begin{array}{cc}
3 & 4\\
-2 & 1\\
-1 & 2
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{c}
7.94\\
1.15\\
2.88\\
8.95
\end{array}\right]\left[\begin{array}{cc}
9.98 & 2.91\\
1.48 & 8.05\\
6.41 & 9.67\\
5.16 & 8.88
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{cc}
3 & 0\\
5 & -4
\end{array}\right]\left[\begin{array}{ccc}
6 & 3 & 1\\
6 & 1 & 7
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{cc}
2 & 5\\
-1 & 0\\
-3 & 4
\end{array}\right]\left[\begin{array}{cc}
4 & 2\\
6 & -3
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{c}
8\\
0\\
9
\end{array}\right]\left[\begin{array}{cccc}
2 & 4 & -1 & 1\\
9 & 6 & 10 & 8
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{cccc}
0 & 0 & 3 & 6\\
-3 & 0 & 7 & -3\\
1 & -1 & 4 & 4
\end{array}\right]\left[\begin{array}{c}
4\\
7\\
4\\
5
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{cc}
5 & 4\end{array}\right]\left[\begin{array}{cc}
-1 & 2\\
6 & -1
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{cc}
3.47 & -2.73\end{array}\right]\left[\begin{array}{cc}
5.53 & 5.89\\
5.24 & 0.82
\end{array}\right]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left[\begin{array}{cccc}
1 & -1 & 6 & 3\\
10 & 4 & 8 & 3
\end{array}\right]\left[\begin{array}{cccc}
8 & 3 & 7 & 10\\
8 & 1 & 4 & 4
\end{array}\right]$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Suppose 
\begin_inset Formula $A$
\end_inset

 is a matrix of size 
\begin_inset Formula $2×7$
\end_inset

, 
\begin_inset Formula $C$
\end_inset

 is a matrix of size 
\begin_inset Formula $5×7$
\end_inset

, and the matrix computation 
\begin_inset Formula $A+BC$
\end_inset

 is defined.
 What is the size of matrix 
\begin_inset Formula $B$
\end_inset

?
\end_layout

\begin_layout Enumerate
Matrices 
\begin_inset Formula $A,B,C,D$
\end_inset

 are such that 
\begin_inset Formula $(A+B)(CD)$
\end_inset

 is defined (all of the operations are possible).
 If 
\begin_inset Formula $B$
\end_inset

 is a 
\begin_inset Formula $3\times4$
\end_inset

 matrix and 
\begin_inset Formula $D$
\end_inset

 is a 
\begin_inset Formula $5\times8$
\end_inset

 matrix, what are the dimensions of 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

?
\end_layout

\begin_layout Enumerate
Describe how to multiply two matrices, and explain how to determine whether
 the multiplication can be done.
\end_layout

\begin_layout Enumerate
Find a pair of matrices 
\begin_inset Formula $M$
\end_inset

 and 
\begin_inset Formula $N$
\end_inset

 so that 
\begin_inset Formula $MN$
\end_inset

 is defined, but 
\begin_inset Formula $NM$
\end_inset

 is not, and therefore 
\begin_inset Formula $MN\neq NM$
\end_inset

.
\end_layout

\begin_layout Enumerate
Find a pair of matrices 
\begin_inset Formula $M$
\end_inset

 and 
\begin_inset Formula $N$
\end_inset

 such that 
\begin_inset Formula $MN$
\end_inset

 and 
\begin_inset Formula $NM$
\end_inset

 are both defined but are different sizes, and therefore 
\begin_inset Formula $MN\neq NM$
\end_inset

.
\end_layout

\begin_layout Enumerate
Find a pair of 
\begin_inset Formula $3\times3$
\end_inset

 matrices 
\begin_inset Formula $M$
\end_inset

 and 
\begin_inset Formula $N$
\end_inset

 such that 
\begin_inset Formula $MN\neq NM$
\end_inset

.
\end_layout

\begin_layout Enumerate
Can you find a pair of 
\begin_inset Formula $2\times2$
\end_inset

 matrices 
\begin_inset Formula $M$
\end_inset

 and 
\begin_inset Formula $N$
\end_inset

 such that 
\begin_inset Formula $MN=NM$
\end_inset

?
\end_layout

\begin_layout Enumerate
Suppose the matrix product 
\begin_inset Formula $MN$
\end_inset

 is defined (the multiplication can be done).
 Which of the following is true?
\end_layout

\begin_deeper
\begin_layout Enumerate
M and N must have the same number of rows.
\end_layout

\begin_layout Enumerate
M and N must have the same number of columns.
\end_layout

\begin_layout Enumerate
The number of rows of M must equal the number of columns of N .
\end_layout

\begin_layout Enumerate
The number of columns of M must equal the number of rows of N .
\end_layout

\begin_layout Enumerate
None of the above.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{enumigrab}{
\backslash
value{enumi}}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
finishexercises 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
For the remaining exercises, let
\begin_inset Formula 
\[
\begin{gathered}A=\left[\begin{array}{cccccc}
42 & 0 & -47 & -34 & -10 & -48\\
8 & 26 & 43 & -18 & -20 & -30\\
-41 & -40 & -29 & -36 & -44 & 12\\
-42 & 47 & 28 & 4 & 38 & -22\\
18 & -15 & -1 & 29 & 37 & 9
\end{array}\right]\ U=\left[\begin{array}{cccccc}
-21 & -33 & 28 & -15 & 34 & 45\\
27 & 40 & -13 & -23 & -10 & 15\\
43 & -6 & 46 & 17 & 13 & 21\\
-40 & -46 & 2 & 16 & 22 & -14\\
10 & -12 & 29 & 35 & 48 & -31
\end{array}\right]\\
Q=\left[\begin{array}{cccccc}
-17 & -37 & -34 & 20 & -14 & 10\\
-23 & 44 & 47 & 18 & 19 & 49\\
11 & 33 & 35 & -50 & 2 & 9\\
-36 & -18 & 7 & 17 & -49 & 31\\
-8 & 16 & 28 & -32 & -2 & 5
\end{array}\right]\ R=\left[\begin{array}{cccccc}
40 & 47 & 13 & -2 & -22 & 3\\
-45 & 4 & -16 & 6 & -18 & 8\\
18 & -26 & -27 & -19 & -48 & -35\\
33 & 35 & 9 & 25 & 2 & 7\\
-8 & 10 & -12 & -34 & 11 & 38
\end{array}\right]
\end{gathered}
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{enumerate} 
\backslash
setcounter{enumi}{
\backslash
value{enumigrab}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
item
\backslash
sage
\backslash
 
\end_layout

\end_inset

Compute 
\begin_inset Formula $(A^{T})(U)$
\end_inset

 and 
\begin_inset Formula $(U)(A^{T})$
\end_inset

.
 Are they the same?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
item
\backslash
sage
\backslash
 
\end_layout

\end_inset

Compute 
\begin_inset Formula $\left(3Q^{T}-2R^{T}\right)^{T}$
\end_inset

 and 
\begin_inset Formula $3Q-2R$
\end_inset

.
 What do you notice? Why?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
item
\backslash
sage
\backslash
 
\end_layout

\end_inset

Can you determine which of the following computations are defined? Ask SageMath
 to compute them all.
 The ones that are undefined will produce long error messages.
\begin_inset Formula 
\[
\begin{gathered}(QR)^{T}\qquad AU^{T}R\qquad QUAR^{T}\qquad A^{T}QU^{T}A\\
A+R^{T}\qquad AR^{T}\qquad(R-A)^{T}
\end{gathered}
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{enumerate}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
You may 
\begin_inset CommandInset href
LatexCommand href
name "follow this link"
target "https://sagecell.sagemath.org/?z=eJxtkb1qxEAMhPuDeweXORiBpf0vUuQREkh1XHFlijQhRR4_M2tXxoa1d9eS5tPobXldvp-_P19_LwUV9xxYYbnBUoa59h0dUZETzx0WvEu6dy5-Y_Bccb0sh8dyhgeDAqwXHRlJ-QGV8cIFJqeGgcftevk8oFhQISVlKpo8uSAaJOqEiTQB-UtoBKzwdsLB2NhZGUJ1vojlpFOlmBAsQpnkk-T9SOLyY_NE7e-pBGCL7I39-EAecAeBWczKekIS2LySj02wxhxqWp9QAiBYoEyKj-No1qmlzqeL3NAQTaliq9mns5yV0SYj0tlQpFJ2zIGgpWQRwWaGelQbnQz_xjhnOw==&lang=sage&interacts=eJyLjgUAARUAuQ=="
literal "false"

\end_inset

 or copy and paste the following code into a SageCell to get started.
\end_layout

\begin_layout LyX-Code
A = matrix(5,6,[42,0,-47,-34,-10,-48,8,26,43,-18,-20,-30,-41,-40,-29,-36,
\end_layout

\begin_layout LyX-Code
                -44,12,-42,47,28,4,38,-22,18,-15,-1,29,37,9,])
\end_layout

\begin_layout LyX-Code
U = matrix(5,6,[-21,-33,28,-15,34,45,27,40,-13,-23,-10,15,43,-6,46,17,
\end_layout

\begin_layout LyX-Code
                13,21,-40,-46,2,16,22,-14,10,-12,29,35,48,-31,])
\end_layout

\begin_layout LyX-Code
Q = matrix(5,6,[-17,-37,-34,20,-14,10,-23,44,47,18,19,49,11,33,35,-50,
\end_layout

\begin_layout LyX-Code
                2,9,-36,-18,7,17,-49,31,-8,16,28,-32,-2,5,])
\end_layout

\begin_layout LyX-Code
R = matrix(5,6,[40,47,13,-2,-22,3,-45,4,-16,6,-18,8,18,-26,-27,-19,
\end_layout

\begin_layout LyX-Code
                -48,-35,33,35,9,25,2,7,-8,10,-12,-34,11,38,])
\end_layout

\end_body
\end_document
